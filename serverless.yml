service:
  name: seo-data-service-test
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack

custom:
  bucket: seo-data-service-test-v4
  region: ap-southeast-1
  profile: seo-data-service-test-admin
  accountId: 009079049616
  stage: dev

provider:
  name: aws
  runtime: nodejs8.10
  profile: ${self:custom.profile}
  region: ${self:custom.region}
  stage: ${self:custom.stage}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "lambda:InvokeFunction"
      Resource:
        - "arn:aws:lambda:${self:custom.region}:${self:custom.accountId}:function:${self:service.name}-${self:custom.stage}-GetSeoData"
        - "arn:aws:lambda:${self:custom.region}:${self:custom.accountId}:function:${self:service.name}-${self:custom.stage}-UploadSeoData"
    - Effect: "Allow"
      Action:
        - "s3:PutObject"
        - "s3:GetObject"
        - "s3:ListBucketVersions"
        - "s3:GetObjectVersion"
      Resource:
        - "arn:aws:s3:::${self:custom.bucket}*"

functions:
  UploadSeoData:
    handler: handlers.uploadCsv
    events:
      - http:
          method: post
          path: uploadCsv
          cors: true
    environment:
      Bucket: ${self:custom.bucket}
  GetSeoData:
    handler: handlers.getJsonFromS3
    events:
      - http:
          method: get
          path: getJson/{resourceId}/{objectId}/{cacheId}
          cors: true
    environment:
      Bucket: ${self:custom.bucket}

resources:
  Resources:
    StorageBucket:
      Type: "AWS::S3::Bucket"
      Properties:
        BucketName: ${self:custom.bucket}
        VersioningConfiguration:
          Status: Enabled
    CloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Comment: Cloud Distribution for SEO Data service.
          PriceClass: PriceClass_200
          Enabled: true
          HttpVersion: http2
          DefaultCacheBehavior:
            ForwardedValues:
              QueryString: false
            TargetOriginId: SeoDataS3Origin
            ViewerProtocolPolicy: redirect-to-https
          CacheBehaviors:
            - ForwardedValues:
                QueryString: false
              PathPattern: /cached
              TargetOriginId: SeoDataApiGatewayOrigin
              ViewerProtocolPolicy: redirect-to-https
              AllowedMethods:
                - HEAD
                - DELETE
                - POST
                - GET
                - OPTIONS
                - PUT
                - PATCH
          Origins:
            - Id: SeoDataApiGatewayOrigin
              DomainName:
                Fn::Join:
                  - "."
                  - - Ref: ApiGatewayRestApi
                    - execute-api.${self:custom.region}.amazonaws.com
              CustomOriginConfig:
                OriginProtocolPolicy: https-only
            - Id: SeoDataS3Origin
              DomainName: ${self:custom.bucket}.s3.amazonaws.com
              CustomOriginConfig:
                OriginProtocolPolicy: https-only
